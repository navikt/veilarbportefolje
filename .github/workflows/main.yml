name: Build, push and deploy
on: push
env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: ghcr.io/${{ github.repository }}/veilarbportefolje
  PRINT_PAYLOAD: true
permissions:
  packages: write
  contents: write
jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Run maven tests
        env:
          MAVEN_OPTS: -Xss1024M -Xmx2048M
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B verify
  build-and-push:
    name: Build and push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Build maven artifacts
        run: mvn -Dgithub.token=${{ secrets.GITHUB_TOKEN }} -B package -D skipTests
      - name: Login to Docker
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ env.IMAGE_TAG }}
  deploy-dev:
    name: Deploy application to dev
    if: github.ref == 'refs/heads/dev'
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: .nais/application/application-config-dev.yaml
          VAR: version=${{ env.IMAGE_TAG }},namespace=pto
  deploy-prod:
    name: Deploy application to prod
    if: github.ref == 'refs/heads/master'
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy application
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: .nais/application/application-config-prod.yaml
          VAR: version=${{ env.IMAGE_TAG }}
  release-prod:
    name: Create prod release
    needs: deploy-prod
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          name: Release to prod
          target_commitish: master
          tag_name: release/prod@${{ env.IMAGE_TAG }}
          prerelease: false
